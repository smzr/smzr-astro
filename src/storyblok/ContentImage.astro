---
import { storyblokEditable, RichTextSchema, renderRichText } from "@storyblok/astro";
const { blok } = Astro.props;

const layout = blok.layout;

const content = renderRichText(blok.content, {
  resolver: (component, blok) => {
    switch (component) {
        case "eyebrow":
            return `<span class="eyebrow">${blok.content}</span>`;
        case "button":
            return `<a href="${blok.link.cached_url}" class="button">${blok.text}</a>`;
        default:
            return `Component ${component} not found`;
    }
  },
});
---
<section {...storyblokEditable(blok)} class={`wrapper ${layout}`}>
    <div class="content flow"><Fragment set:html={content}/></div>
    <div class="image"><img src={`${blok.image.filename}/m/800x1000/smart`} alt="Hero Image"></div>
</section>
<style lang="scss" is:global>
    .content-image {
        --switcher-vertical-alignment: center;
        display: flex;
        flex-wrap: wrap;
        gap: 2.5rem var(--gutter, 2rem);
		align-items: var(--switcher-vertical-alignment, flex-start);

        .content {
            h1,
            h2 {
                + * {
                    --flow-space: clamp( 1.375rem, 1.2rem + .89vw, 2rem );
                }
            }

            h1 { font-size: var(--s-giant); }
            h2 { font-size: var(--s-xxl); }

            .button {
                --flow-space: clamp(1.5rem, 0.4231rem + 3.0769vw, 2.5rem);
            }
        }

        .image {
            position: relative;
            width: 100%;
            aspect-ratio: 4 / 5;

            img {
                position: absolute;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }
    }

    .content-image > * {
        flex-grow: 1;
        flex-basis: calc(( 50rem - 100%) * 999);
    }

    .image-content {
        @extend .content-image;
        flex-direction: row-reverse;
    }
</style>